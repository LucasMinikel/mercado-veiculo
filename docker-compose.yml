services:
  cliente-service:
    build:
      context: .
      dockerfile: ./services/cliente-service/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://user:password@db:5432/main_db
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - PROJECT_ID=saga-project
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
      pubsub-emulator:
        condition: service_healthy

  veiculo-service:
    build:
      context: .
      dockerfile: ./services/veiculo-service/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://user:password@db:5432/main_db
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - PROJECT_ID=saga-project
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
      pubsub-emulator:
        condition: service_healthy

  pagamento-service:
    build:
      context: .
      dockerfile: ./services/pagamento-service/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://user:password@db:5432/main_db
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - PROJECT_ID=saga-project
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
      pubsub-emulator:
        condition: service_healthy

  orquestrador:
    build:
      context: .
      dockerfile: ./services/orquestrador/Dockerfile
    ports:
      - "8083:8080"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://user:password@db:5432/main_db
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
      - PROJECT_ID=saga-project
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
      pubsub-emulator:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: main_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 3

  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    command: gcloud beta emulators pubsub start --project=saga-project --host-port=0.0.0.0:8085
    ports:
      - "8085:8085"
    environment:
      - PUBSUB_EMULATOR_HOST=0.0.0.0:8085
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8085/v1/projects/saga-project/topics || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  tests:
    build: ./tests
    depends_on:
      cliente-service:
        condition: service_healthy
      veiculo-service:
        condition: service_healthy
      pagamento-service:
        condition: service_healthy
      orquestrador:
        condition: service_healthy
    environment:
      - CLIENTE_SERVICE_URL=http://cliente-service:8080
      - VEICULO_SERVICE_URL=http://veiculo-service:8080
      - PAGAMENTO_SERVICE_URL=http://pagamento-service:8080
      - ORQUESTRADOR_SERVICE_URL=http://orquestrador:8080
      - PROJECT_ID=saga-project
      - PUBSUB_EMULATOR_HOST=pubsub-emulator:8085
    profiles:
      - test

volumes:
  db_data: